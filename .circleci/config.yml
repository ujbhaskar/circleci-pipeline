version: 2
jobs:
  lint:
    docker:
      - image: circleci/node:12.0
    working_directory: ~/repo
    environment:
      NODE_ENV: test
    steps:
      - run: node --version; npm --version
      - checkout
      - run:
          name: Log versions
          command: |
            echo "bash: $(bash --version)"
            echo "git: $(git --version)"
            echo "node: $(node --version)"
            echo "npm: $(npm --version)"
      - restore_cache:
          name: Restore npm cache
          key: dependency-cache-{{checksum "package.json"}}

      - run:
          name: Install packages
          command: npm ci
      - run:
          name: 'Lint Check'
          command: 'npm run lint'
  build:
    docker:
      - image: circleci/node:12.0
    working_directory: ~/repo
    environment:
      NODE_ENV: test
    steps:
      - run: node --version; npm --version
      - checkout
      - run:
          name: Log versions
          command: |
            echo "bash: $(bash --version)"
            echo "git: $(git --version)"
            echo "node: $(node --version)"
            echo "npm: $(npm --version)"
      - restore_cache:
          name: Restore npm cache
          key: dependency-cache-{{checksum "package.json"}}

      - run:
          name: Install packages
          command: npm ci
      - run:
          name: 'Build Project'
          command: 'npm run build'
  deploy:
    docker:
      - image: circleci/node:12.0
    working_directory: ~/repo
    environment:
      NODE_ENV: test
    steps:
      - checkout
      - run:
          name: Install Firebase
          command: npm install firebase-tools
      - run:
          name: 'Build Project'
          command: 'npm run build'
      - run:
          name: 'Deploy to Firebase Hosting..'
          command: './node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN'
workflows:
  version: 2
  build-job:
    jobs:
      - lint
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main

